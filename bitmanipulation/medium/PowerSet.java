package bitmanipulation.medium;

import java.util.ArrayList;

/*
 * Subsequences of String
 * 
 * Problem statement
You are given a string 'STR' containing lowercase English letters from a to z inclusive. Your task is to find all non-empty possible subsequences of 'STR'.

A Subsequence of a string is the one which is generated by deleting 0 or more letters from the string and keeping the rest of the letters in the same order.


Constraints:
1 <= T <= 10 
1 <=  |STR| <= 16

Where |STR| represents the length of the string 'STR'.

Time Limit: 1 sec


Sample Input 1:
1 
abc
Sample Output 1:
a ab abc ac b bc c
Explanation of sample input 1:
All possible subsequences of abc are :  
“a” , “b” , “c” , “ab” , “bc” , “ac”, “abc”
Sample Input 2:
1
bbb
Sample Output 2:
b b b bb bb bb bbb
 */

public class PowerSet {
    public static String[] getSubstring(String str) {
        char[] charSet = str.toCharArray();
        ArrayList<String> resultArr = new ArrayList<>();

        for(int i = 1; i < (1<<charSet.length); i++) {
            StringBuilder sb = new StringBuilder();
            int idx = i,ctr = 0;
            while (idx > 0) {
                if((idx&1) == 1) {
                    sb.append(str.charAt(ctr));
                }
                ctr++;
                idx = idx >> 1;
            }

            resultArr.add(sb.toString());
        }

        return resultArr.toArray(new String[resultArr.size()]);
    }
}
